server:
  port: 8082
  shutdown: graceful

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://localhost:25432/postgres
    username: postgres
    password: postgres
  jpa:
    open-in-view: false
    show-sql: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${REALM_URL}

# Order Service Configuration
orders:
  catalog-service-url: http://localhost:8081
  order-events-exchange: orders-exchange
  new-orders-queue: new-orders
  delivered-orders-queue: delivered-orders
  cancelled-orders-queue: cancelled-orders
  error-orders-queue: error-orders
  publish-order-events-job-cron: "*/5 * * * * *"
  new-orders-job-cron: "*/10 * * * * *"

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    enabled: false
    sampling:
      probability: 1.0

# Swagger Configuration
swagger:
  api-gateway-url: http://localhost:8989/orders

# OAuth2 Configuration
OAUTH2_SERVER_URL: http://localhost:9191
REALM_URL: ${OAUTH2_SERVER_URL}/realms/bookstore

# Resilience4j Configuration
resilience4j:
  retry:
    backends:
      catalog-service:
        max-attempts: 2
        wait-duration: 1s
  circuitbreaker:
    backends:
      catalog-service:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 6
        minimum-number-of-calls: 4
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50

---
spring.config.activate.on-profile: docker

spring:
  datasource:
    url: jdbc:postgresql://order-db:5432/postgres
  rabbitmq:
    host: rabbitmq

orders:
  catalog-service-url: http://api-gateway:8989/catalog

swagger:
  api-gateway-url: http://api-gateway:8989/orders

OAUTH2_SERVER_URL: http://keycloak:9191

management:
  tracing:
    enabled: true
  zipkin:
    tracing:
      endpoint: http://tempo:9411/api/v2/spans